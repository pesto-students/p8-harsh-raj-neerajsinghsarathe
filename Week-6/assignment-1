//* Assignment-1

function maxSubArraySum(A) {
  let current_max = A[0];
  let global_max = A[0];
  
  for (let i = 1; i < A.length; i++) {
    current_max = Math.max(A[i], current_max + A[i]);
    global_max = Math.max(global_max, current_max);
  }
  
  return global_max;
}

console.log(maxSubArraySum([1, 2, 3, 4, -10]));
console.log(maxSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4]));

//* Assignment- 2

function spiralOrder(matrix) {
  const result = [];
  if (matrix.length === 0) return result;
  let top = 0, bottom = matrix.length - 1, left = 0, right = matrix[0].length - 1;
  
  while (top <= bottom && left <= right) {
    
    for (let i = left; i <= right; i++) {
      result.push(matrix[top][i]);
    }
    top++;
    
    
    for (let i = top; i <= bottom; i++) {
      result.push(matrix[i][right]);
    }
    right--;
    
    
    if (top <= bottom) {
      for (let i = right; i >= left; i--) {
        result.push(matrix[bottom][i]);
      }
      bottom--;
    }
    
   
    if (left <= right) {
      for (let i = bottom; i >= top; i--) {
        result.push(matrix[i][left]);
      }
      left++;
    }
  }
  
  return result;
}

console.log(spiralOrder([ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ]));

//* Assignment-3 

function sortArray(arr) {
  let count0 = 0, count1 = 0, count2 = 0;
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] === 0) count0++;
    else if (arr[i] === 1) count1++;
    else if (arr[i] === 2) count2++;
  }
  
  let i = 0;
  while (count0 > 0) {
    arr[i++] = 0;
    count0--;
  }
  while (count1 > 0) {
    arr[i++] = 1;
    count1--;
  }
  while (count2 > 0) {
    arr[i++] = 2;
    count2--;
  }
  
  return arr;
}

console.log(sortArray([0, 2, 1, 2, 0]));